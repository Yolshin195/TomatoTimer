{"version":3,"sources":["webpack:///./src/component/Router/routes/Todo/index.js","webpack:///./src/component/Todo/AddTodo.js","webpack:///./src/component/Todo/Todo.js","webpack:///./src/component/Todo/TodoList.js","webpack:///./src/component/Todo/TodoList.container.js","webpack:///./src/component/Todo/index.js"],"names":["__webpack_require__","_react2","default","createElement","className","_Timer2","_Todo2","_react","_reactRedux","_toDo","AddTodo","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","toggle","React","Component","setState","_this2","input","textarea","dispatch","onSubmit","e","preventDefault","value","trim","addTodo","onToggle","type","ref","node","placeholder","class","onClick","bind","connect","_ref","currentTask","title","text","completed","completedTomato","lostTomato","onCompleted","onSetCurrentTask","onRemove","style","display","margin","margin-right","margin-left","onChange","checked","padding-left","todos","onRemoveTodo","onTodoClick","map","todo","index","_extends","key","_redux","console","log","filter","t","getVisibleTodos","visibilityFilter","bindActionCreators","toggleTodo","setCurrentTodo","removeTodo","TodoList","_TodoList2","_AddTodo2"],"mappings":"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","file":"0.bundle.js","sourcesContent":["import React from 'react';\n\nimport Todo from '../../../Todo';\nimport Timer from '../../../Timer';\n\nconst RouterTodo = () => {\n  return(\n    <div className=\"row\">\n      <div className=\"col s5\">\n        <Timer/>\n      </div>\n      <div className=\"col s7\">\n        <Todo/>\n      </div>\n    </div>\n  )\n}\n\nexport default RouterTodo;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../../store/toDo.actions';\n\nclass AddTodo extends React.Component { \n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false\n    };\n  }\n\n  onToggle() {\n    if(this.state.toggle) {\n      this.setState({toggle: false});\n    } else {\n      this.setState({toggle: true});\n    }\n  }\n\n  render() {\n    let input;\n    let textarea;\n    const { dispatch } = this.props;\n    const { toggle } = this.state;\n    if(toggle === true)\n      return(\n        <div>\n          <div className=\"modal open modal__open\">\n            <form\n             onSubmit={e => {\n              e.preventDefault()\n              if (!input.value.trim() || !textarea.value.trim()) {\n                return\n              }\n              dispatch(addTodo(input.value, textarea.value));\n              input.value = '';\n              textarea.value = '';\n              this.onToggle.call(this);\n            }}>\n              <div className=\"modal-content\">\n                <h3>New task</h3>\n                <input\n                  type=\"text\"\n                  ref={node => {input = node}}\n                  placeholder=\"Task title\"\n                />\n                <textarea\n                  ref={node => {textarea = node}}\n                  placeholder=\"Task description\"\n                >\n                </textarea>\n              </div>\n              <div class=\"modal-footer\">\n                <button\n                  type=\"submit\"\n                  className=\"modal-close waves-effect waves-green btn-flat\"\n                >\n                  Add\n                </button>\n                <a\n                  className=\"modal-close waves-effect waves-green btn-flat\"\n                  onClick={this.onToggle.bind(this)}\n                >Close</a>\n          \n              </div>\n            </form>\n          </div>\n          <div\n            className=\"modal-overlay modal-overlay__open\"\n            onClick={this.onToggle.bind(this)}\n          ></div>\n        </div>\n      );\n    else\n      return(\n        <a\n          class=\"todo-add__position btn-floating btn-large waves-effect waves-light white\"\n          onClick={this.onToggle.bind(this)}\n        >\n          <i class=\"material-icons material-icons__white\">add</i>\n        </a> \n      );\n  }\n};\n\nexport default connect()(AddTodo);\n","import React from 'react';\n\nconst Todo = ({currentTask, title, text, completed, completedTomato, lostTomato, onCompleted, onSetCurrentTask, onRemove}) => (\n  <li>\n    <div className=\"collapsible-header\">\n      <i\n        className=\"icon-currentTask\"\n        style={{display: (currentTask) ? 'block' : 'none'}}\n      />\n      {\n        (currentTask) ? \n          <h5 style={{margin:0}}>{title}</h5>\n        :\n          <p\n            style={{margin:0}}\n            className=\"todo-currentTask__active\"\n            onClick={onSetCurrentTask}\n          >\n            {title}\n          </p>\n      }\n      <span className=\"badge\">\n      </span>\n      <span className=\"grey-text text-darken-1\">\n        <i\n          className=\"icon-tomato\"\n          style={{'margin-right':0}}\n        />\n      </span>\n      <span className=\"grey-text text-darken-1\">\n        x {completedTomato}\n      </span>\n      <span style={{'margin-left': '10px'}}>\n        <i\n          className=\"icon-minus\"\n          style={{'margin-right':0}}\n        />\n      </span>\n      <span className=\"grey-text text-darken-1\">\n       x {lostTomato}\n      </span>\n      <p style={{margin:0, 'margin-left': '15px'}}>\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={onCompleted}\n            checked={completed}\n          />\n          <span\n            className=\"todo-completed_btn\"\n            style={{'padding-left': '22px'}}\n          >Completed</span>\n        </label>\n      </p>\n      <span\n        className=\"grey-text text-darken-1\"\n        style={{'margin-left': '10px'}}\n      >\n        <i\n          className=\"icon-delete\"\n          style={{'margin-right':0}}\n          onClick={onRemove}\n        />\n      </span>\n    </div>\n    <div className=\"collapsible-body\" style={{display: (currentTask) ? 'block' : 'none'}}>\n      <p>{text}</p>\n    </div>\n  </li>\n)\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo';\n\nconst TodoList = ({currentTask, todos, onRemoveTodo, onTodoClick, onSetCurrentTask }) => (\n  <ul className=\"collapsible\">\n    {todos.map((todo, index) =>\n      <Todo\n        key={index}\n        currentTask={(currentTask === index) ? true : false}\n        {...todo}\n        onCompleted={() => onTodoClick(index)}\n        onSetCurrentTask={()=>onSetCurrentTask(index)}  \n        onRemove={()=>onRemoveTodo(index)}\n      />\n    )}\n  </ul>\n)\n\nexport default TodoList;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { toggleTodo, setCurrentTodo, removeTodo} from '../../store/toDo.actions'\n\nimport TodoList from './TodoList';\n\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case 'SHOW_ALL':\n      return todos\n    case 'SHOW_COMPLETED':\n      return todos.filter(t => t.completed)\n    case 'SHOW_ACTIVE':\n      return todos.filter(t => !t.completed)\n  }\n}\n\nconst putStateToProps = (state) => {\n  console.log(state);\n  return {\n    todos: getVisibleTodos(state.todo.todos.todos, state.todo.visibilityFilter),\n    currentTask: state.todo.todos.currentTask\n  }\n}\n\nconst putActionsToProps = (dispatch) => {\n  return {\n    onTodoClick: bindActionCreators(toggleTodo, dispatch),\n    onSetCurrentTask: bindActionCreators(setCurrentTodo, dispatch),\n    onRemoveTodo: bindActionCreators(removeTodo, dispatch)\n  }\n}\n\nexport default connect(putStateToProps, putActionsToProps)(TodoList);\n","import React from 'react';\nimport TodoList from './TodoList.container';\nimport AddTodo from './AddTodo';\n\nconst TodoApp = () =>(\n  <div>\n    <TodoList/>\n    <AddTodo/>\n  </div>\n) \n\nexport default TodoApp;\n"],"sourceRoot":""}